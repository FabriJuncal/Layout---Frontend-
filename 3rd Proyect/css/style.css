/* Custom properties (--*): CSS variables */
/* Con este metodo podemos declarar variables en css y utilizarlas con la funcion var() */
/* Todas las varibles iran dentro de :root y las variables siempre empezaran con dos guiones medios (--) */
:root{
    --primario:#ffc107;
    --secundario: #0097a7;
    --oscuro: #212121;
    --gris: #757575;

    --anchoPantalla: 1200px;

}

html {
    box-sizing: border-box;
    /* Le agregamos min-height por que sino nos aparecen lineas por el gradient que tomamos del sitio webgradients.com
       Esto solo ocurre en algunos casos */
    min-height: 100%;
    /* Hacemos esta adaptacion de la fuente para que podamos utilizar de una manera mas sencilla el tama√±o de fuente 'rem'
       ahora '1rem' serian 10px */
    font-size: 62.5%;
  }
  *, *:before, *:after {
    box-sizing: inherit;
  }

body{
    font-family: 'Krub', sans-serif;
    /* Le agregamos min-height por que sino nos aparecen lineas por el gradient que tomamos del sitio webgradients.com
       Esto solo ocurre en algunos casos */
    min-height: 100%;
    background-image: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
    font-size: 1.6rem;
}

h1,h2,h3{
    margin: 0;
}

h2,h3{
    text-align: center;
}

h3{
    color: var(--secundario);
    font-weight: 400;
    font-size: 3rem;
}

p{
    font-size: 1.8rem;
    line-height: 2;
}

.site-header{
    background: white;
}

.site-header nav{
    max-width: 1200px;  /*Se utiliza max-width: 1200px y margin: 0 auto, para que el al agrandarse la pantalla*/
    margin: 0 auto;     /*el sitio siempre quede centrado*/
    padding: 2rem 0;

    display: flex;
    flex-direction: column;
    align-items: center;
}

@media (min-width:768px){
    .site-header nav{
        flex-direction: row;
        justify-content: space-between;
    }
}

.site-header nav a{
    /* Utilzamos la funcion var() y le pasamos el nombre de la variable que creamos --oscuro */
    color: var(--oscuro);
    font-size: 2.2rem;
    text-decoration: none;
    margin-bottom: 2rem;
}

/* Seleccionamos el ultimo elemento con :last-of-type */
.site-header nav a:last-of-type{
    margin-bottom: 0;
}

@media (min-width:768px){
    .site-header nav a{
        margin-bottom: 0;
    }
}

.hero{
    height: 45rem;
    background-image: url(../img/hero.jpg);
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    
}

.hero::after{
    content: '';
    background-color: rgba(0,0,0,.7);
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
}

.contenedor-hero{
    color:white;
    position: relative;
    z-index: 1;
    text-align: center;
}

.contenedor-hero i{
    font-size: 5rem;
    color: var(--primario);
}

.boton{
    background-color: var(--secundario);
    padding: 1rem 5rem;
    display: inline-block;
    margin-top: 1rem;
    color: white;
    text-decoration: none;
    text-transform: uppercase;
    font-weight: 700;
    font-size: 2.2rem;
    border-radius: .5rem;
    border: none;
}

.boton:hover{
    cursor: pointer;
}

.contenedor{
    max-width: var(--anchoPantalla);
    margin: 3rem auto;
    background-color: white;
    padding: 3rem;
    border-radius: 1rem;
    -webkit-box-shadow: 0px 7px 6px -4px rgba(0,0,0,0.61);
    -moz-box-shadow: 0px 7px 6px -4px rgba(0,0,0,0.61);
    box-shadow: 0px 7px 6px -4px rgba(0,0,0,0.61);

}


.contenedor-servicios{
    margin-top: 3rem;
}
@media (min-width: 768px){
    .contenedor-servicios{
        display: flex;
        justify-content: space-between;
    }

    .servicio{                         /*MANERA DE GENERAR UN GRID*/
        flex: 0 0 calc(33.3% - 1rem); /*Lo que hace esta linea es separar en 3 partes iguales los contenedores de los servicios*/
    }                                 /*y con el - 1rem agregarle una separacion.*/
}

.servicio{
    display: flex;
    flex-direction: column;
    align-items: center;
}

.iconos{
    width: 100px;
    height: 100px;
    border-radius: 50%;
    background-color: var(--primario);
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    margin-top: 2rem;
    font-size: 3rem;
}

form{
    background-color: var(--gris);
    padding: 2rem;
    border-radius: 1rem;
    margin-top: 3rem;
}

form legend{
    text-align: center;
    font-size: 2rem;
    color: var(--primario);
    margin: 3rem 0;
}

@media (min-width: 768px){
    form{
        max-width: 800px;
        margin: 3rem auto;
    }

    .contenedor-campos{
        display: flex;
        justify-content: space-between;
        flex-wrap: wrap;   
    }
    .campos{
        flex: 0 0 calc(50% - 1rem); /* UTILIZAMOS FLEX, PARA ARMAR UNA GRILLA*/
    }
}

.campos{
    display: flex;
    margin-bottom:  2rem;
}

.campos label{
    flex: 0 0 90px;
    padding-top: .5rem;
    color: white;
}

.campos input{
    flex: 1;
    height: 4rem;
    width: 100%
}

.campos textarea{
    flex: 1;
    height: 6rem; 
}

.w-100{
    flex: 0 0 100%;
}

.enviar{
    display: flex;
    justify-content: flex-end;
}










